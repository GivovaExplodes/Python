# -*- coding: utf-8 -*-
"""lab4.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1DZ6SEp5ltVcBS2uu5Ubds0zn_fBe9ImO
"""

import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.ensemble import RandomForestClassifier
from sklearn.metrics import accuracy_score
from sklearn.svm import SVC
from sklearn.naive_bayes import GaussianNB

df = pd.read_csv("./seeds.csv")
df.head()

df.tail()

df['class'] = df['type'].apply(lambda x: 0 if x == 1 else 1)
df.drop(columns=['type'], inplace=True)

df.head()

X = df.drop(columns=['class'])  # Features
y = df['class']  # Target variable

X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

clf = RandomForestClassifier(random_state=42)
clf.fit(X_train, y_train)

y_pred = clf.predict(X_test)
rf_accuracy = accuracy_score(y_test, y_pred)
print("RandomForestAccuracy:", rf_accuracy)

svm_clf = SVC(kernel='linear')
svm_clf.fit(X_train, y_train)

svm_accuracy = svm_clf.score(X_test, y_test)
print("SVM Accuracy:", svm_accuracy)

"""For the third classifier I went with the Naive Bayes classifier."""

nb_clf = GaussianNB()
nb_clf.fit(X_train, y_train)

nb_accuracy = nb_clf.score(X_test, y_test)
print("Naive Bayes Accuracy:", nb_accuracy)

print("Random Forest Accuracy:", rf_accuracy)
print("SVM Accuracy:", svm_accuracy)
print("Naive Bayes Accuracy:", nb_accuracy)

"""As shown above SVM is the most accurate for this dataset"""